// Generated by view binder compiler. Do not edit!
package com.example.reglogapi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.example.reglogapi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final Guideline guideline5;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final EditText loginemail;

  @NonNull
  public final EditText loginpassword;

  @NonNull
  public final ProgressBar loginprogressbar;

  @NonNull
  public final TextView signuptext;

  @NonNull
  public final TextView textView;

  private FragmentLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Guideline guideline3,
      @NonNull Guideline guideline5, @NonNull Button loginBtn, @NonNull EditText loginemail,
      @NonNull EditText loginpassword, @NonNull ProgressBar loginprogressbar,
      @NonNull TextView signuptext, @NonNull TextView textView) {
    this.rootView = rootView;
    this.guideline3 = guideline3;
    this.guideline5 = guideline5;
    this.loginBtn = loginBtn;
    this.loginemail = loginemail;
    this.loginpassword = loginpassword;
    this.loginprogressbar = loginprogressbar;
    this.signuptext = signuptext;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline3;
      Guideline guideline3 = rootView.findViewById(id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.guideline5;
      Guideline guideline5 = rootView.findViewById(id);
      if (guideline5 == null) {
        break missingId;
      }

      id = R.id.login_btn;
      Button loginBtn = rootView.findViewById(id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.loginemail;
      EditText loginemail = rootView.findViewById(id);
      if (loginemail == null) {
        break missingId;
      }

      id = R.id.loginpassword;
      EditText loginpassword = rootView.findViewById(id);
      if (loginpassword == null) {
        break missingId;
      }

      id = R.id.loginprogressbar;
      ProgressBar loginprogressbar = rootView.findViewById(id);
      if (loginprogressbar == null) {
        break missingId;
      }

      id = R.id.signuptext;
      TextView signuptext = rootView.findViewById(id);
      if (signuptext == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ConstraintLayout) rootView, guideline3, guideline5, loginBtn,
          loginemail, loginpassword, loginprogressbar, signuptext, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
